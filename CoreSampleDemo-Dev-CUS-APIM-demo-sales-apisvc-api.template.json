{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ApimServiceName": {
      "type": "string"
    }
  },
  "resources": [
    {
      "properties": {
        "description": "Demo.Sales.APISvc - temporarily using \"Mocked Data\" (PP)",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "Demo.Sales.APISvc",
        "path": "demo-apis/api/sales",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-sales-apisvc')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": []
    },
    {
      "properties": {
        "contentType": "application/vnd.oai.openapi.components+json",
        "document": {
          "components": {
            "schemas": {
              "salesHeader": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "type": "integer"
                  },
                  "orderId": {
                    "type": "integer"
                  },
                  "salesQty": {
                    "type": "integer"
                  },
                  "salesAmount": {
                    "type": "number"
                  },
                  "taxExempt": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-sales-apisvc/1584407660707')]",
      "type": "Microsoft.ApiManagement/service/apis/schemas",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-sales-apisvc')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Mock the sales data - https://docs.microsoft.com/en-us/azure/api-management/mock-api-responses",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "sales data",
            "headers": [
              {
                "name": "x-IsMocked-Data",
                "description": "Is Mock Data",
                "type": "Bool",
                "required": false,
                "values": [
                  "True"
                ]
              }
            ],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{\r\n    \"customerId\": 1234,\r\n    \"orderId\": 1234,\r\n    \"salesQty\": 12,\r\n    \"salesAmount\": 1234.50,\r\n    \"taxExempt\": true\r\n}",
                "schemaId": "1584407660707",
                "typeName": "salesHeader"
              }
            ]
          }
        ],
        "displayName": "TestMock",
        "method": "GET",
        "urlTemplate": "/salesdata"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-sales-apisvc/testmock')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-sales-apisvc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'demo-sales-apisvc', '1584407660707')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t\t<mock-response status-code=\"200\" content-type=\"application/json\" />\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-sales-apisvc/testmock/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'demo-sales-apisvc', 'testmock')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "Mock the sales data with Rate Limit\nhttps://docs.microsoft.com/en-us/azure/api-management/mock-api-responses\nhttps://docs.microsoft.com/en-us/azure/api-management/api-management-access-restriction-policies",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "sales data",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{\r\n    \"customerId\": 1234,\r\n    \"orderId\": 1234,\r\n    \"salesQty\": 12,\r\n    \"salesAmount\": 1234.50,\r\n    \"taxExempt\": true\r\n}",
                "schemaId": "1584407660707",
                "typeName": "salesHeader"
              }
            ]
          }
        ],
        "displayName": "TestMockWithRateLimit",
        "method": "GET",
        "urlTemplate": "/salesdataratelimit"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-sales-apisvc/testmockwithratelimit')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-sales-apisvc')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'demo-sales-apisvc', '1584407660707')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t\t<rate-limit-by-key calls=\"3\" renewal-period=\"60\" counter-key=\"@(context.Subscription?.Key ?? \"anonymous\")\" increment-condition=\"@(context.Response.StatusCode >= 200 && context.Response.StatusCode < 300)\" />\r\n\t\t<mock-response status-code=\"200\" content-type=\"application/json\" />\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-sales-apisvc/testmockwithratelimit/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'demo-sales-apisvc', 'testmockwithratelimit')]"
      ]
    },
    {
      "properties": {
        "value": "<!--\n    IMPORTANT:\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\n    - To remove a policy, delete the corresponding policy statement from the policy document.\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\n    - Policies are applied in the order of their appearance, from the top down.\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\n-->\r\n<policies>\r\n\t<inbound>\r\n\t\t<base />\r\n\t</inbound>\r\n\t<backend>\r\n\t\t<base />\r\n\t</backend>\r\n\t<outbound>\r\n\t\t<base />\r\n\t</outbound>\r\n\t<on-error>\r\n\t\t<base />\r\n\t</on-error>\r\n</policies>",
        "format": "rawxml"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-sales-apisvc/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-sales-apisvc')]"
      ]
    },
    {
      "properties": {
        "displayName": "demo"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-sales-apisvc/demo')]",
      "type": "Microsoft.ApiManagement/service/apis/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-sales-apisvc')]"
      ]
    },
    {
      "properties": {
        "displayName": "Sales"
      },
      "name": "[concat(parameters('ApimServiceName'), '/demo-sales-apisvc/sales')]",
      "type": "Microsoft.ApiManagement/service/apis/tags",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-sales-apisvc')]"
      ]
    },
    {
      "properties": {},
      "name": "[concat(parameters('ApimServiceName'), '/demo/demo-sales-apisvc')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'demo-sales-apisvc')]"
      ]
    }
  ]
}